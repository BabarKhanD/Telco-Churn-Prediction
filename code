!pip install scikit-learn pandas numpy joblib matplotlib seaborn --quiet
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import confusion_matrix, classification_report

url = "https://raw.githubusercontent.com/IBM/telco-customer-churn-on-icp4d/master/data/Telco-Customer-Churn.csv"
df = pd.read_csv(url)
print("\nData Sample:")
display(df.head(3))

plt.figure(figsize=(8,4))
sns.countplot(x='Churn', data=df, palette='Set2')
plt.title("Class Distribution (Churn vs No Churn)")
plt.show()

print("\nClassification Report:")
print(classification_report(y_test, y_pred))

cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(6,4))
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', 
            xticklabels=['No Churn', 'Churn'], 
            yticklabels=['No Churn', 'Churn'])
plt.title("Confusion Matrix")
plt.ylabel('Actual')
plt.xlabel('Predicted')
plt.show()

if hasattr(pipeline.named_steps['classifier'], 'coef_'):
    features = numeric_features + \
               list(pipeline.named_steps['preprocessor']
                    .named_transformers_['cat']
                    .named_steps['onehot']
                    .get_feature_names_out(categorical_features))
    
    plt.figure(figsize=(10,6))
    pd.Series(pipeline.named_steps['classifier'].coef_[0], 
              index=features).sort_values().plot(kind='barh', color='skyblue')
    plt.title("Feature Importance (Logistic Regression Coefficients)")
    plt.show()
